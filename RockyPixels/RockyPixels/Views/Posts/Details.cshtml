@model RockyPixels.Models.Post

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dd class="col-sm-10" runat="server" id="detailsImage">
            <h5>Attachment</h5>
            @{
                var image = "../../img/no_image.png";
                if (Model.ImageData != null && Model.ImageId != null) // Handle NullImg as missing image
                {
                    var base64 = Convert.ToBase64String(Model.ImageData);
                    image = String.Format("data:image/gif;base64,{0}", base64);
                }
            }
            <img src="@image" alt="" class="img-fluid">
        </dd>
        <br />
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Topic)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Topic)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PostContent)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PostContent)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LastModifiedOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LastModifiedOn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.CategoryName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PostTags)
        </dt>
        <dd class="col-sm-10">
            <ul>
                @foreach (var postTag in Model.PostTags)
                {
                    <li>@postTag.Tag.TagName</li>
                }
            </ul>
        </dd>
    </dl>
</div>

<h3>Comments:</h3>
<ul>
    @foreach (var comment in Model.Comments)
    {
        <li>
            <strong>@comment.Author</strong> (@comment.CreatedOn):
            <p>@comment.CommentContent</p>
        </li>
    }
</ul>
<hr />
<h3>Add a Comment:</h3>

<form asp-action="AddComment" asp-route-postId="@Model.PostId" method="post">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="Content">Comment</label>
        <textarea id="Content" name="content" class="form-control" placeholder="Enter your comment here..."></textarea>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">Post Comment</button>
</form>
<br />
<div>
    <a asp-action="Edit" asp-route-id="@Model?.PostId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>